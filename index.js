(()=>{"use strict";var e,t,n={9200:e=>{e.exports=JSON.parse('{"idle":{"fps":60,"w":32,"h":32,"ox":15,"oy":31,"sx":0,"sy":0,"count":11},"run":{"fps":60,"w":32,"h":32,"ox":15,"oy":31,"sx":0,"sy":32,"count":12},"hit":{"fps":60,"w":32,"h":32,"ox":15,"oy":31,"sx":0,"sy":64,"count":7}}')},4796:e=>{e.exports=JSON.parse('{"in":{"fps":90,"w":96,"h":96,"ox":16,"oy":32,"sx":0,"sy":0,"count":7},"out":{"fps":90,"w":96,"h":96,"ox":16,"oy":32,"sx":0,"sy":96,"count":7}}')},6978:e=>{e.exports=JSON.parse('{"fps":60,"w":32,"h":32,"ox":0,"oy":0,"sx":0,"sy":0,"count":6}')},928:e=>{e.exports=JSON.parse('[{"name":"blue","w":64,"h":64,"sx":0,"sy":0},{"name":"brown","w":64,"h":64,"sx":64,"sy":0},{"name":"pink","w":64,"h":64,"sx":128,"sy":0},{"name":"gray","w":64,"h":64,"sx":0,"sy":64},{"name":"green","w":64,"h":64,"sx":64,"sy":64},{"name":"purple","w":64,"h":64,"sx":128,"sy":64},{"name":"yellow","w":64,"h":64,"sx":128,"sy":0}]')},4771:e=>{e.exports=JSON.parse('[{"name":"start_game","w":76,"h":14,"sx":0,"sy":0},{"name":"description","w":84,"h":14,"sx":0,"sy":14}]')},4663:e=>{e.exports=JSON.parse('[{"name":"achievements","w":20,"h":20,"sx":0,"sy":0},{"name":"leaderboard","w":20,"h":20,"sx":20,"sy":0},{"name":"settings","w":20,"h":20,"sx":40,"sy":0},{"name":"sound_on","w":20,"h":20,"sx":60,"sy":0},{"name":"sound_off","w":20,"h":20,"sx":80,"sy":0},{"name":"prev","w":20,"h":20,"sx":0,"sy":20},{"name":"next","w":20,"h":20,"sx":20,"sy":20},{"name":"play","w":20,"h":20,"sx":40,"sy":20},{"name":"pause","w":20,"h":20,"sx":60,"sy":20},{"name":"reset","w":20,"h":20,"sx":80,"sy":20},{"name":"fullscreen_enter","w":20,"h":20,"sx":0,"sy":40},{"name":"fullscreen_exit","w":20,"h":20,"sx":20,"sy":40},{"name":"buttons","w":20,"h":20,"sx":40,"sy":40},{"name":"close","w":20,"h":20,"sx":0,"sy":60},{"name":"back","w":20,"h":20,"sx":20,"sy":60},{"name":"death","w":20,"h":20,"sx":40,"sy":60}]')},8615:e=>{e.exports=JSON.parse('[{"name":"a","w":8,"h":10,"sx":0,"sy":0},{"name":"b","w":8,"h":10,"sx":8,"sy":0},{"name":"c","w":8,"h":10,"sx":16,"sy":0},{"name":"d","w":8,"h":10,"sx":24,"sy":0},{"name":"e","w":8,"h":10,"sx":32,"sy":0},{"name":"f","w":8,"h":10,"sx":40,"sy":0},{"name":"g","w":8,"h":10,"sx":48,"sy":0},{"name":"h","w":8,"h":10,"sx":56,"sy":0},{"name":"i","w":8,"h":10,"sx":64,"sy":0},{"name":"j","w":8,"h":10,"sx":72,"sy":0},{"name":"k","w":8,"h":10,"sx":0,"sy":10},{"name":"l","w":8,"h":10,"sx":8,"sy":10},{"name":"m","w":8,"h":10,"sx":16,"sy":10},{"name":"n","w":8,"h":10,"sx":24,"sy":10},{"name":"o","w":8,"h":10,"sx":32,"sy":10},{"name":"p","w":8,"h":10,"sx":40,"sy":20},{"name":"q","w":8,"h":10,"sx":40,"sy":10},{"name":"r","w":8,"h":10,"sx":48,"sy":10},{"name":"s","w":8,"h":10,"sx":56,"sy":10},{"name":"t","w":8,"h":10,"sx":64,"sy":10},{"name":"u","w":8,"h":10,"sx":72,"sy":10},{"name":"v","w":8,"h":10,"sx":0,"sy":20},{"name":"w","w":8,"h":10,"sx":8,"sy":20},{"name":"x","w":8,"h":10,"sx":16,"sy":20},{"name":"y","w":8,"h":10,"sx":24,"sy":20},{"name":"z","w":8,"h":10,"sx":32,"sy":20},{"name":"0","w":8,"h":10,"sx":0,"sy":30},{"name":"1","w":8,"h":10,"sx":8,"sy":30},{"name":"2","w":8,"h":10,"sx":16,"sy":30},{"name":"3","w":8,"h":10,"sx":24,"sy":30},{"name":"4","w":8,"h":10,"sx":32,"sy":30},{"name":"5","w":8,"h":10,"sx":40,"sy":30},{"name":"6","w":8,"h":10,"sx":48,"sy":30},{"name":"7","w":8,"h":10,"sx":56,"sy":30},{"name":"8","w":8,"h":10,"sx":64,"sy":30},{"name":"9","w":8,"h":10,"sx":72,"sy":30},{"name":".","w":8,"h":10,"sx":0,"sy":40},{"name":",","w":8,"h":10,"sx":8,"sy":40},{"name":":","w":8,"h":10,"sx":16,"sy":40},{"name":"?","w":8,"h":10,"sx":24,"sy":40},{"name":"!","w":8,"h":10,"sx":32,"sy":40},{"name":"(","w":8,"h":10,"sx":40,"sy":40},{"name":")","w":8,"h":10,"sx":48,"sy":40},{"name":"+","w":8,"h":10,"sx":56,"sy":40},{"name":"-","w":8,"h":10,"sx":64,"sy":40}]')},4377:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(7585)),i=n(5440);t.default=class{constructor(e){this.activities=[],this.canvas=e,this.mouseVec=new r.default,this.elapsedSecs=0,this.lastUpdate=-1,this.canvas.onclick=e=>{if(0!==e.button)return;const t=i.getCanvasMousePos(this.canvas,e.pageX,e.pageY,this.canvas.width,this.canvas.height);this.activities.slice().reverse().some((e=>e.mouseClick(t,t.add(e.camera))))},this.canvas.onmousemove=e=>{this.mouseVec=i.getCanvasMousePos(this.canvas,e.pageX,e.pageY,this.canvas.width,this.canvas.height)}}get ctx(){const e=this.canvas.getContext("2d");if(!e)throw"Can't get context from canvas";return e.webkitImageSmoothingEnabled=!1,e.mozImageSmoothingEnabled=!1,e.imageSmoothingEnabled=!1,e}update(){const e=Date.now();if(-1!==this.lastUpdate){const t=-1===this.lastUpdate?0:e-this.lastUpdate;this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.activities=this.activities.filter((e=>!e.isDestroyed&&(e.update(t),e.render(this.ctx),!0)))}this.lastUpdate=e,this.activities.slice().reverse().some((e=>e.mouseHover(this.mouseVec,this.mouseVec.add(e.camera)))),i.intervalPerAnimationFrame(this.update.bind(this))}addActivity(e){this.activities.push(e)}}},8235:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(4989)),i=s(n(7585)),a=s(n(2343));class o extends r.default{constructor(e){super(),this.app=e,this.camera=new i.default}relocation(e){}addWidget(e){this.children.push(e),e.app=this.app,e.activity=this}render(e){this.isDestroyed||this.isHidden()||this.children.forEach((t=>{t.isAbsolute()||(e.save(),e.translate(-this.camera.x,-this.camera.y)),t.render(e),t.isAbsolute()||e.restore()}))}getBoundingBox(){return a.default.from(0,this.app.canvas)}isAbsolute(){return!0}viewport(e=0,t=0){return new i.default(this.vw(e),this.vh(t))}vw(e){return this.app.canvas.width/100*e}vh(e){return this.app.canvas.height/100*e}}t.default=o},5031:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(8235)),i=n(9796),a=n(9348),o=n(5310),u=s(n(8534)),d=s(n(9213)),l=s(n(7474)),h=s(n(8711)),c=s(n(5854)),f=s(n(8773)),p=(e,t)=>(t.renderOption.scale(t.isHover()?6.5:6),!0);class m extends r.default{constructor(e){super(e);const t=o.DefaultCharacterAnimation.idle(i.DefaultCharacterImages.get("PinkMan")),n=o.DefaultCharacterAnimation.run(i.DefaultCharacterImages.get("PinkMan"));t.setLoop(4).setOnAnimationEnd((()=>this.titleCharacter.sprite=n.setLoop(6))),n.setLoop(6).setOnAnimationEnd((()=>this.titleCharacter.sprite=t.setLoop(4))),this.background=new l.default(null,a.BackgroundSpriteSheet.random()),this.titleText=new d.default(null,"random race",(new u.default).absolute().scale(12)),this.titleCharacter=new h.default(null,n,(new u.default).absolute().scale(5)),this.startGameButton=new h.default(null,a.ButtonSpriteSheet.get("start_game"),(new u.default).absolute()),this.descriptionButton=new h.default(null,a.ButtonSpriteSheet.get("description"),(new u.default).absolute()),this.reloadButton=new h.default(null,a.IconSpriteSheet.get("reset"),(new u.default).absolute().scale(3)),this.fullscreenButton=null,f.default.valid&&(this.fullscreenButton=new h.default(this.reloadButton.pos.subtract(this.vw(7),0),a.IconSpriteSheet.get("fullscreen_enter"),(new u.default).absolute().scale(3)),this.fullscreenButton.setOnMouseClick((()=>f.default.toggle(document.body))).setOnUpdate(p),f.default.onChange((()=>{var e;this.fullscreenButton.sprite=null!==(e=a.IconSpriteSheet.get(f.default.enable?"fullscreen_exit":"fullscreen_enter"))&&void 0!==e?e:null}))),this.background.setOnUpdate((e=>this.background.pos.x-=e/10)),this.titleCharacter.setOnMouseClick((e=>{t.fps-=3,n.fps-=3,t.fps<0&&(t.fps=100,n.fps=100),this.addWidget(new d.default(e.add(80*Math.random()-40,0),100===t.fps?"-100":"+3",(new u.default).absolute()).setRenderOption((new u.default).scale(2).absolute().hue(360*Math.random()).brightness(6).contrast(2)).setOnUpdate(((e,t)=>{t instanceof d.default?(t.pos.y-=e/20,t.pos.y<0&&t.destroy()):t.destroy()})))})),this.startGameButton.setOnUpdate(((e,t)=>t.renderOption.scale(t.isHover()?10.5:10)||!0)),this.descriptionButton.setOnUpdate(((e,t)=>t.renderOption.scale(t.isHover()?8.5:8)||!0)),this.reloadButton.setOnMouseClick((()=>{var e,s;return this.background.setSprite(a.BackgroundSpriteSheet.random()),this.titleCharacter.setSprite(o.DefaultCharacterAnimation.hit(null!==(s=null===(e=this.titleCharacter.sprite)||void 0===e?void 0:e.getImage())&&void 0!==s?s:null).setLoop(1).setOnAnimationEnd((()=>{this.titleCharacter.setSprite(o.CharacterAppearingAnimation.in().setLoop(0).setOnAnimationEnd((()=>{const e=i.DefaultCharacterImages.random();t.setImage(e),n.setImage(e),this.titleCharacter.sprite=t.setLoop(1)})))}))),!0})).setOnUpdate(p),this.runners=[];for(let e=0;e<30;++e){const t=new h.default(this.viewport(100*Math.random(),100));t.setOnUpdate((e=>{var n,s;const r=this.getBoundingBox().add(this.camera).maxX;(null!==(s=null===(n=t.getBoundingBox())||void 0===n?void 0:n.minX)&&void 0!==s?s:0)>r&&(t.pos.x=this.camera.x,t.sprite=null),t.sprite||(t.renderOption.scale(5*Math.random()+5),t.sprite=o.DefaultCharacterAnimation.run(i.DefaultCharacterImages.random()).setFps(60*Math.random()+30)),t.sprite instanceof c.default&&-1===t.sprite.loop&&(t.pos.x+=e/3*(60/t.sprite.fps)),t.sprite.update(e)})).setOnMouseClick((()=>{if(t.sprite instanceof c.default&&-1===t.sprite.loop)return t.setSprite(o.DefaultCharacterAnimation.hit(t.sprite.getImage()).setLoop(0).setOnAnimationEnd((()=>{t.setSprite(o.CharacterAppearingAnimation.out().setLoop(0).setOnAnimationEnd((()=>{t.pos.x=this.camera.x,t.sprite=null})))}))),!0})),this.runners[e]=t}new URLSearchParams(window.location.search).get("renderMouseClick")&&this.setOnMouseClick((e=>{const t=o.CollectedItemAnimation.clone().setLoop(0),n=new h.default(e,t,(new u.default).absolute().scale(4));t.setOnAnimationEnd((()=>n.destroy())),this.addWidget(n)})),this.setOnUpdate((e=>{this.camera.x+=e/10})),this.addWidget(this.background),this.addWidget(this.titleText),this.addWidget(this.titleCharacter),this.addWidget(this.startGameButton),this.addWidget(this.descriptionButton),this.addWidget(this.reloadButton),this.fullscreenButton&&this.addWidget(this.fullscreenButton),this.runners.forEach((e=>this.addWidget(e))),this.relocation(1)}relocation(e){this.titleText.pos=this.viewport(50,10),this.titleCharacter.pos=this.titleText.getBoundingBox().min.add(-this.vw(2),this.titleText.getBoundingBox().max.y/1.5),this.startGameButton.pos=this.viewport(50,30),this.descriptionButton.pos=this.viewport(50,50),this.reloadButton.pos=this.viewport(95,10),this.fullscreenButton&&(this.fullscreenButton.pos=this.reloadButton.pos.subtract(this.vw(7),0)),this.runners.forEach((t=>t.pos.set(t.pos.x*e,this.vh(100))))}}t.default=m},5310:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CollectedItemAnimation=t.CharacterAppearingAnimation=t.DefaultCharacterAnimation=void 0;const r=n(9796),i=s(n(5854)),a=s(n(9200)),o=s(n(6978)),u=s(n(4796));t.DefaultCharacterAnimation={idle:e=>new i.default(null!=e?e:null,a.default.idle),run:e=>new i.default(null!=e?e:null,a.default.run),hit:e=>new i.default(null!=e?e:null,a.default.hit)},t.CharacterAppearingAnimation={in:()=>new i.default(r.ParticleImages.get("CharacterAppearing"),u.default.in),out:()=>new i.default(r.ParticleImages.get("CharacterAppearing"),u.default.out)},t.CollectedItemAnimation=new i.default(r.ParticleImages.get("CollectedItem"),o.default)},9796:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ParticleImages=t.CollectedItemImage=t.CharacterAppearingImage=t.CharacterImages=t.DefaultCharacterImages=t.VirtualGuyImage=t.NinjaFrogImage=t.MaskManImage=t.PinkManImage=t.UiImages=t.ButtonImage=t.IconImage=t.BackgroundImage=t.TextImage=void 0;const r=s(n(9283)),i=s(n(5765)),a=s(n(1579)),o=s(n(1304)),u=s(n(9095)),d=s(n(8399)),l=s(n(7190)),h=s(n(1385)),c=s(n(7449)),f=s(n(131)),p=s(n(5309));t.TextImage=i.default,t.BackgroundImage=a.default,t.IconImage=o.default,t.ButtonImage=u.default,t.UiImages={Text:t.TextImage,Background:t.BackgroundImage,Icon:t.IconImage,button:t.ButtonImage},t.PinkManImage=d.default,t.MaskManImage=l.default,t.NinjaFrogImage=h.default,t.VirtualGuyImage=c.default,t.DefaultCharacterImages=(new r.default).set("PinkMan",t.PinkManImage).set("MaskMan",t.MaskManImage).set("NinjaFrog",t.NinjaFrogImage).set("VirtualGuy",t.VirtualGuyImage),t.CharacterImages=new r.default(t.DefaultCharacterImages.entries()),t.CharacterAppearingImage=f.default,t.CollectedItemImage=p.default,t.ParticleImages=(new r.default).set("CharacterAppearing",t.CharacterAppearingImage).set("CollectedItem",t.CollectedItemImage)},9348:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ButtonSpriteSheet=t.IconSpriteSheet=t.BackgroundSpriteSheet=t.TextSpriteSheet=t.loadSpriteSheet=void 0;const r=n(9796),i=s(n(5241)),a=s(n(9283)),o=s(n(8615)),u=s(n(928)),d=s(n(4663)),l=s(n(4771));function h(e,t){const n=new a.default;return t.forEach((t=>{var s;n.set(null!==(s=t.name)&&void 0!==s?s:n.size+"",new i.default(t).setImage(e))})),n}t.loadSpriteSheet=h,t.TextSpriteSheet=h(r.TextImage,o.default),t.BackgroundSpriteSheet=h(r.BackgroundImage,u.default),t.IconSpriteSheet=h(r.IconImage,d.default),t.ButtonSpriteSheet=h(r.ButtonImage,l.default)},8022:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(4377)),i=s(n(5031)),a=s(n(8773)),o=document.createElement("canvas");o.id="game";const u=new r.default(o);function d(){const e=o.width;o.width=Math.min(2520,Math.max(1920,window.innerWidth/window.innerHeight*1080)),o.height=1080,e!==o.width&&u.activities.forEach((t=>t.relocation(e/o.width)))}document.addEventListener("DOMContentLoaded",(()=>{d(),document.body.append(o),u.addActivity(new i.default(u)),u.update()})),window.addEventListener("resize",d),window.addEventListener("orientationchange",d),a.default.valid&&window.screen&&screen.orientation&&screen.orientation.lock&&a.default.onChange((()=>{if(!a.default.enable||window.innerWidth>window.innerHeight)return;const e=screen.orientation.type;"portrait-primary"!==e&&"portrait-secondary"!==e||screen.orientation.lock("landscape")}))},5241:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(7585));class i{constructor(e){const{w:t,h:n,sx:s,sy:r,ox:i,oy:a}=e;this.w=null!=t?t:0,this.h=null!=n?n:0,this.sx=null!=s?s:0,this.sy=null!=r?r:0,this.ox=null!=i?i:0,this.oy=null!=a?a:0,this._image=null}getImage(){return this._image}setImage(e){return e instanceof HTMLImageElement?this._image=e:"string"==typeof e?(this._image=new Image,this._image.src=e):this._image=null,this}update(e){}draw(e,t,n=1){const s=this.getImage();if(!s||!s.complete||0===s.naturalHeight)return;const i=r.default.from(t);e.save(),e.translate(i.x,i.y),e.drawImage(s,this.sx,this.sy,this.w,this.h,-this.ox*n/2,-this.oy*n/2,this.w*n,this.h*n),e.restore()}static from(e,t,n,s,r,a){return new i({w:e,h:t,sx:n,sy:s,ox:r,oy:a})}}t.default=i},5854:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(5241));class i extends r.default{constructor(e,t){const{fps:n,count:s}=t;super(t),this.fps=n,this.frames=[],this.count=0,this.loop=-1,this.elapsedSecs=0,this.onAnimationEnd=()=>{},this.setImage(e);for(let t=0;t<s;++t)this.frames[t]=r.default.from(this.w,this.h,this.sx+t*this.w,this.sy,this.ox,this.oy).setImage(e),++this.count}setImage(e){return super.setImage(e),this.frames.forEach((t=>t.setImage(e))),this}getCurrentFrame(){let e=this.frames[Math.floor(this.elapsedSecs/this.fps)];return e||(0!==this.loop?(-1!==this.loop&&--this.loop,this.elapsedSecs=0,e=this.frames[0]):(e=this.frames[this.frames.length-1],this.onAnimationEnd&&this.onAnimationEnd(this))),null!=e?e:null}setFps(e=60){return this.fps=e,this}setLoop(e=-1){return this.loop=e,this}setOnAnimationEnd(e){return this.onAnimationEnd=e,this}update(e){this.elapsedSecs+=e}draw(e,t,n=1){const s=this.getCurrentFrame();null!==s&&s.draw(e,t,n)}reset(){this.elapsedSecs=0}clone(){return new i(this.getImage(),this)}}t.default=i},2343:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(7585));class i{constructor(e=new r.default,t=new r.default){this.min=r.default.from(e),this.max=r.default.from(t),this.min.x>this.max.x&&([this.min.x,this.max.x]=[this.max.x,this.min.x]),this.min.y>this.max.y&&([this.min.y,this.max.y]=[this.max.y,this.min.y])}get minX(){return this.min.x}get minY(){return this.min.y}get maxX(){return this.max.x}get maxY(){return this.max.y}get xLength(){return this.max.x-this.min.x}get yLength(){return this.max.y-this.min.y}isInside(e,t){const n=r.default.from(e,t);return this.min.x<n.x&&this.max.x>n.x&&this.min.y<n.y&&this.max.y>n.y}add(e,t){const n=r.default.from(e,t);return new i(this.min.add(n),this.max.add(n))}subtract(e,t){const n=r.default.from(e,t);return new i(this.min.subtract(n),this.max.subtract(n))}expand(e,t){const n=r.default.from(e,t);return new i(this.min.subtract(n),this.max.add(n))}contract(e,t){const n=r.default.from(e,t);return new i(this.min.add(n),this.max.subtract(n))}ceil(){return i.from(this.min.ceil(),this.max.ceil())}floor(){return i.from(this.min.floor(),this.max.floor())}round(){return i.from(this.min.round(),this.max.round())}clone(){return i.from(this.min,this.max)}static from(e,t,n,s){return new i(r.default.from(e,n),r.default.from(void 0===t?e:t,void 0===s?n:s))}}t.default=i},4989:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(8534));t.default=class{constructor(e=new r.default){this.children=[],this.renderOption=null!=e?e:new r.default,this.isDestroyed=!1,this.hoverOutDelay=0,this.onUpdate=()=>{},this.onRender=()=>{},this.onDestroy=()=>{},this.onMouseClick=()=>!1,this.onMouseHover=()=>!1,this.onMouseHoverOut=()=>{},this.init()}init(){}update(e){this.children=this.children.filter((t=>!t.isDestroyed&&(t.update(e),!0))),this.hoverOutDelay>0&&(this.hoverOutDelay-=e,this.hoverOutDelay<=0&&(this.hoverOutDelay=0,this.onMouseHoverOut(this))),this.onUpdate(e,this)}render(e){if(!this.isDestroyed&&!this.isHidden()){if(e.save(),this.renderOption.applyFilter(e),this.children.forEach((t=>{e.save(),t.render(e),e.restore()})),this.onRender(e,this),new URLSearchParams(window.location.search).get("renderBoundingBox")){const t=this.getBoundingBox();t&&(e.beginPath(),e.moveTo(t.minX,t.minY),e.lineTo(t.minX,t.maxY),e.lineTo(t.maxX,t.maxY),e.lineTo(t.maxX,t.minY),e.closePath(),e.stroke())}e.restore()}}mouseClick(e,t){if(this.isDestroyed)return!1;const n=this.getBoundingBox();return!(n&&!n.isInside(this.isAbsolute()?e:t))&&(this.onMouseClick(e,t,this)||-1!==this.children.slice().reverse().findIndex((n=>n.mouseClick(e,t))))}mouseHover(e,t){if(this.isDestroyed)return!1;const n=this.getBoundingBox();return!(!n||!n.isInside(this.isAbsolute()?e:t))&&(this.hoverOutDelay=20,this.onMouseHover(e,t,this)||-1!==this.children.slice().reverse().findIndex((n=>n.mouseHover(e,t))))}destroy(){this.isDestroyed=!0,this.onDestroy(this)}setOnUpdate(e){return this.onUpdate=e,this}setOnRender(e){return this.onRender=e,this}setOnMouseClick(e){return this.onMouseClick=e,this}setOnMouseHover(e){return this.onMouseHover=e,this}setOnMouseHoverOut(e){return this.onMouseHoverOut=e,this}setRenderOption(e){return this.renderOption=e,this}isAbsolute(){return this.renderOption._absolute}isHidden(){return this.renderOption._hidden}isHover(){return this.hoverOutDelay>0}getScale(){return this.renderOption._scale}getDrawBox(){return this.renderOption._drawBox}getBoundingBox(){return null}}},8773:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{static get valid(){var e;const t=null!==(e=document)&&void 0!==e?e:{};return Boolean(t.fullscreenEnabled||t.webkitFullscreenEnabled||t.webkitCancelFullScreen||t.msFullscreenEnabled||t.mozFullScreenEnabled||!1)}static get enable(){var e;if(!this.valid)return!1;const t=null!==(e=document)&&void 0!==e?e:{};return Boolean(t.fullscreenElement||t.webkitFullscreenElement||t.webkitCurrentFullScreenElement||t.msFullscreenElement||t.mozFullScreenElement)}static request(e=document.documentElement){var t;const n=null!==(t=e)&&void 0!==t?t:{};n.requestFullscreen()||n.webkitRequestFullscreen()||n.webkitRequestFullScreen()||n.msRequestFullscreen()||n.mozRequestFullScreen()}static exit(){var e;const t=null!==(e=document)&&void 0!==e?e:{};return t.exitFullscreen()||t.webkitExitFullscreen()||t.webkitCancelFullScreen()||t.msExitFullscreen()||t.mozCancelFullScreen()}static toggle(e=document.documentElement){this.enable?this.exit():this.request(e)}static onChange(e){document.addEventListener("fullscreenchange",e,!1),document.addEventListener("webkitfullscreenchange",e,!1),document.addEventListener("mozfullscreenchange",e,!1),document.addEventListener("MSFullscreenChange",e,!1)}}},9283:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class n extends Map{random(){const e=Array.from(this.values());return e[Math.floor(e.length*Math.random()<<0)]}}t.default=n},8534:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(){this._hidden=!1,this._absolute=!1,this._scale=1,this._rotate=0,this._hue=0,this._brightness=1,this._contrast=1,this._grayscale=!1,this._drawBox=null}hidden(e=!0){return this._hidden=e,this}absolute(e=!0){return this._absolute=e,this}scale(e=1){return this._scale=e,this}rotate(e=0){return this._rotate=e,this}hue(e=0){return this._hue=e,this}brightness(e=1){return this._brightness=e,this}contrast(e=1){return this._contrast=e,this}grayscale(e=!0){return this._grayscale=e,this}drawBox(e=null){return this._drawBox=e,this}applyFilter(e){let t="none"===e.filter?"":e.filter;0!==this._rotate&&e.rotate(-this._rotate),0!==this._hue&&(t+=` hue-rotate(${this._hue}deg) `),1!==this._brightness&&(t+=` brightness(${this._brightness}) `),1!==this._contrast&&(t+=` contrast(${this._contrast}) `),this._grayscale&&(t+=" grayscale(1) "),this._drawBox&&(e.rect(this._drawBox.minX,this._drawBox.minY,this._drawBox.maxX,this._drawBox.maxY),e.clip(),e.clearRect(this._drawBox.minX,this._drawBox.minY,this._drawBox.maxX,this._drawBox.maxY)),e.filter=t}}},7585:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e=0,t=0){this.x=e,this.y=t}set(e,t=null){return new n(null!=e?e:this.x,null!=t?t:this.y)}add(e=0,t){const s=n.from(e,t);return new n(this.x+s.x,this.y+s.y)}subtract(e=0,t){const s=n.from(e,t);return new n(this.x-s.x,this.y-s.y)}multiply(e=0,t){const s=n.from(e,t);return new n(this.x*s.x,this.y*s.y)}divide(e=0,t){const s=n.from(e,t);return new n(this.x/s.x,this.y/s.y)}mod(e=0,t){const s=n.from(e,t);return new n(this.x%s.x,this.y%s.y)}ceil(){return new n(Math.ceil(this.x),Math.ceil(this.y))}floor(){return new n(Math.floor(this.x),Math.floor(this.y))}round(){return new n(Math.fround(this.x),Math.fround(this.y))}abs(){return new n(Math.abs(this.x),Math.abs(this.y))}reverse(){throw new n(-this.x,-this.y)}flip(){throw new n(this.y,this.x)}clone(){return new n(this.x,this.y)}distance(e=0,t){const s=n.from(e,t);return Math.sqrt(this.distanceSquared(s))}distanceSquared(e=0,t){const s=n.from(e,t);return(this.x-s.x)**2+(this.y-s.y)**2}static from(e=0,t){return"number"==typeof e?new n(e,"number"==typeof t?t:e):e instanceof n?e:e instanceof HTMLCanvasElement||e instanceof HTMLImageElement?new n(e.width,e.height):new n(e.w,e.h)}}t.default=n},5440:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getCanvasMousePos=t.intervalPerAnimationFrame=void 0;const r=s(n(7585));t.intervalPerAnimationFrame=e=>window.requestAnimationFrame(e)||window.webkitRequestAnimationFrame(e)||window.msRequestAnimationFrame(e)||window.mozRequestAnimationFrame(e)||window.setTimeout(e,1e3/60),t.getCanvasMousePos=(e,t,n,s,i)=>new r.default(t,n).subtract(e.offsetLeft,e.offsetTop).multiply(s/e.offsetWidth,i/e.offsetHeight)},7474:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(8711)),i=s(n(7585));class a extends r.default{init(){this.onRender=e=>{var t;if(!this.activity||!this.sprite)return;const n=(null!==(t=this.getDrawBox())&&void 0!==t?t:this.activity.getBoundingBox()).add(this.pos.mod(this.sprite)).expand(i.default.from(this.sprite).multiply(2)).floor();for(let t=n.min.x;t<n.max.x;t+=this.sprite.w)for(let s=n.min.y;s<n.max.y;s+=this.sprite.h)this.sprite.draw(e,new i.default(t,s),this.getScale())}}getBoundingBox(){return this.getDrawBox()}isAbsolute(){return!0}}t.default=a},8711:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(5864)),i=s(n(2343)),a=s(n(7585)),o=s(n(8534));class u extends r.default{constructor(e,t=null,n=new o.default){super(e,n),this.sprite=t}init(){this.onRender=e=>{if(!this.sprite||!this.sprite.getImage())return;const t=a.default.from(this.sprite).multiply(this.getScale()/2);this.sprite.draw(e,this.pos.subtract(t),this.getScale())},this.onUpdate=e=>{var t;null===(t=this.sprite)||void 0===t||t.update(e)}}getBoundingBox(){if(!this.sprite)return null;const e=a.default.from(this.sprite).multiply(this.getScale()/2);return i.default.from(this.pos.subtract(new a.default(this.sprite.ox,this.sprite.oy).multiply(this.getScale()/2))).expand(e)}setSprite(e){return this.sprite=e,this}}t.default=u},9213:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(5864)),i=n(9348),a=s(n(2343)),o=s(n(7585)),u=s(n(8534));class d extends r.default{constructor(e,t,n=new u.default){super(e,n),this.text=t}init(){this.onRender=e=>{const t=this.getScale()/2,n=8*t,s=10*t,r=this.text.split("\n"),a=r.length;for(let t=0;t<a;++t){const o=r[t],u=o.length;for(let r=0;r<u;++r){const d=i.TextSpriteSheet.get(o.charAt(r).toLowerCase());d&&d.draw(e,this.pos.subtract((u-2*r)*n,(a-2*t)*s),this.getScale())}}}}getBoundingBox(){const e=this.text.split("\n"),t=e.reduce(((e,t)=>Math.max(e,t.length)),0),n=o.default.from(t,e.length).multiply(8,10).multiply(this.getScale()/2);return a.default.from(this.pos).expand(n)}setText(e){return this.text=e,this}}t.default=d},5864:function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(7585)),i=s(n(4989)),a=s(n(8534));class o extends i.default{constructor(e=null,t=new a.default){super(t),this.app=null,this.activity=null,this.pos=null!=e?e:new r.default}setPos(e){return this.pos=e,this}}t.default=o},7190:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s=n.p+"17e5683a05c9fe1824ad11cbbe19afac.png"},1385:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s=n.p+"25fea8a198f2a3790636d991374e1260.png"},8399:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s=n.p+"ca4a0837d0daf434187bcad319aee5f0.png"},7449:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s=n.p+"3df5a9b4e9c2ee05b2724e98d7659e14.png"},131:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s=n.p+"f4ae9b0f20451ce02e7fa7f78b3a1622.png"},5309:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s=n.p+"1d48b48b6ebf621fd4d5d51df21ab142.png"},1579:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s=n.p+"48d13a68747f46f4bea77f7edeb9c692.png"},9095:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s=n.p+"89273dd68fcf9f3042c0620ed2ea1469.png"},1304:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s=n.p+"963d9fb14b4767e9fe51e0838781db46.png"},5765:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s=n.p+"dabbf6f039293f5fb010f850e89e6ea9.png"}},s={};function r(e){var t=s[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var i=s[e]={exports:{}};try{var a={id:e,module:i,factory:n[e],require:r};r.i.forEach((function(e){e(a)})),i=a.module,a.factory.call(i.exports,i,i.exports,a.require)}catch(e){throw i.error=e,e}return i.exports}r.m=n,r.c=s,r.i=[],r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.hu=e=>e+"."+r.h()+".hot-update.js",r.hmrF=()=>"index."+r.h()+".hot-update.json",r.h=()=>"963db5201c1defeb42bd",r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="random-race:",r.l=(n,s,i,a)=>{if(e[n])e[n].push(s);else{var o,u;if(void 0!==i)for(var d=document.getElementsByTagName("script"),l=0;l<d.length;l++){var h=d[l];if(h.getAttribute("src")==n||h.getAttribute("data-webpack")==t+i){o=h;break}}o||(u=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,r.nc&&o.setAttribute("nonce",r.nc),o.setAttribute("data-webpack",t+i),o.src=n),e[n]=[s];var c=(t,s)=>{o.onerror=o.onload=null,clearTimeout(f);var r=e[n];if(delete e[n],o.parentNode&&o.parentNode.removeChild(o),r&&r.forEach((e=>e(s))),t)return t(s)},f=setTimeout(c.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=c.bind(null,o.onerror),o.onload=c.bind(null,o.onload),u&&document.head.appendChild(o)}},r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e,t,n,s,i={},a=r.c,o=[],u=[],d="idle";function l(e){d=e;for(var t=0;t<u.length;t++)u[t].call(null,e)}function h(e){if(0===t.length)return e();var n=t;return t=[],Promise.all(n).then((function(){return h(e)}))}function c(e){if("idle"!==d)throw new Error("check() is only allowed in idle status");return l("check"),r.hmrM().then((function(s){if(!s)return l(m()?"ready":"idle"),null;l("prepare");var i=[];return t=[],n=[],Promise.all(Object.keys(r.hmrC).reduce((function(e,t){return r.hmrC[t](s.c,s.r,s.m,e,n,i),e}),[])).then((function(){return h((function(){return e?p(e):(l("ready"),i)}))}))}))}function f(e){return"ready"!==d?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status")})):p(e)}function p(e){e=e||{},m();var t=n.map((function(t){return t(e)}));n=void 0;var r,i=t.map((function(e){return e.error})).filter(Boolean);if(i.length>0)return l("abort"),Promise.resolve().then((function(){throw i[0]}));l("dispose"),t.forEach((function(e){e.dispose&&e.dispose()})),l("apply");var a=function(e){r||(r=e)},o=[];return t.forEach((function(e){if(e.apply){var t=e.apply(a);if(t)for(var n=0;n<t.length;n++)o.push(t[n])}})),r?(l("fail"),Promise.resolve().then((function(){throw r}))):s?p(e).then((function(e){return o.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):(l("idle"),Promise.resolve(o))}function m(){if(s)return n||(n=[]),Object.keys(r.hmrI).forEach((function(e){s.forEach((function(t){r.hmrI[e](t,n)}))})),s=void 0,!0}r.hmrD=i,r.i.push((function(p){var m,g,w,y=p.module,x=function(n,s){var r=a[s];if(!r)return n;var i=function(t){if(r.hot.active){if(a[t]){var i=a[t].parents;-1===i.indexOf(s)&&i.push(s)}else o=[s],e=t;-1===r.children.indexOf(t)&&r.children.push(t)}else console.warn("[HMR] unexpected require("+t+") from disposed module "+s),o=[];return n(t)},u=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(t){n[e]=t}}};for(var c in n)Object.prototype.hasOwnProperty.call(n,c)&&"e"!==c&&Object.defineProperty(i,c,u(c));return i.e=function(e){return function(e){switch(d){case"ready":return l("prepare"),t.push(e),h((function(){l("ready")})),e;case"prepare":return t.push(e),e;default:return e}}(n.e(e))},i}(p.require,p.id);y.hot=(m=p.id,g=y,w={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:e!==m,_requireSelf:function(){o=g.parents.slice(),e=m,r(m)},active:!0,accept:function(e,t,n){if(void 0===e)w._selfAccepted=!0;else if("function"==typeof e)w._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var s=0;s<e.length;s++)w._acceptedDependencies[e[s]]=t||function(){},w._acceptedErrorHandlers[e[s]]=n;else w._acceptedDependencies[e]=t||function(){},w._acceptedErrorHandlers[e]=n},decline:function(e){if(void 0===e)w._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)w._declinedDependencies[e[t]]=!0;else w._declinedDependencies[e]=!0},dispose:function(e){w._disposeHandlers.push(e)},addDisposeHandler:function(e){w._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=w._disposeHandlers.indexOf(e);t>=0&&w._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,d){case"idle":n=[],Object.keys(r.hmrI).forEach((function(e){r.hmrI[e](m,n)})),l("ready");break;case"ready":Object.keys(r.hmrI).forEach((function(e){r.hmrI[e](m,n)}));break;case"prepare":case"check":case"dispose":case"apply":(s=s||[]).push(m)}},check:c,apply:f,status:function(e){if(!e)return d;u.push(e)},addStatusHandler:function(e){u.push(e)},removeStatusHandler:function(e){var t=u.indexOf(e);t>=0&&u.splice(t,1)},data:i[m]},e=void 0,w),y.parents=o,y.children=[],o=[],p.require=x})),r.hmrC={},r.hmrI={}})(),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),(()=>{var e,t,n,s,i={826:0},a={};function o(e){return new Promise(((t,n)=>{a[e]=t;var s=r.p+r.hu(e),i=new Error;r.l(s,(t=>{if(a[e]){a[e]=void 0;var s=t&&("load"===t.type?"missing":t.type),r=t&&t.target&&t.target.src;i.message="Loading hot update chunk "+e+" failed.\n("+s+": "+r+")",i.name="ChunkLoadError",i.type=s,i.request=r,n(i)}}))}))}function u(a){function o(e){for(var t=[e],n={},s=t.map((function(e){return{chain:[e],id:e}}));s.length>0;){var i=s.pop(),a=i.id,o=i.chain,d=r.c[a];if(d&&(!d.hot._selfAccepted||d.hot._selfInvalidated)){if(d.hot._selfDeclined)return{type:"self-declined",chain:o,moduleId:a};if(d.hot._main)return{type:"unaccepted",chain:o,moduleId:a};for(var l=0;l<d.parents.length;l++){var h=d.parents[l],c=r.c[h];if(c){if(c.hot._declinedDependencies[a])return{type:"declined",chain:o.concat([h]),moduleId:a,parentId:h};-1===t.indexOf(h)&&(c.hot._acceptedDependencies[a]?(n[h]||(n[h]=[]),u(n[h],[a])):(delete n[h],t.push(h),s.push({chain:o.concat([h]),id:h})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function u(e,t){for(var n=0;n<t.length;n++){var s=t[n];-1===e.indexOf(s)&&e.push(s)}}r.f&&delete r.f.jsonpHmr,e=void 0;var d={},l=[],h={},c=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var f in t)if(r.o(t,f)){var p,m=t[f],g=!1,w=!1,y=!1,x="";switch((p=m?o(f):{type:"disposed",moduleId:f}).chain&&(x="\nUpdate propagation: "+p.chain.join(" -> ")),p.type){case"self-declined":a.onDeclined&&a.onDeclined(p),a.ignoreDeclined||(g=new Error("Aborted because of self decline: "+p.moduleId+x));break;case"declined":a.onDeclined&&a.onDeclined(p),a.ignoreDeclined||(g=new Error("Aborted because of declined dependency: "+p.moduleId+" in "+p.parentId+x));break;case"unaccepted":a.onUnaccepted&&a.onUnaccepted(p),a.ignoreUnaccepted||(g=new Error("Aborted because "+f+" is not accepted"+x));break;case"accepted":a.onAccepted&&a.onAccepted(p),w=!0;break;case"disposed":a.onDisposed&&a.onDisposed(p),y=!0;break;default:throw new Error("Unexception type "+p.type)}if(g)return{error:g};if(w)for(f in h[f]=m,u(l,p.outdatedModules),p.outdatedDependencies)r.o(p.outdatedDependencies,f)&&(d[f]||(d[f]=[]),u(d[f],p.outdatedDependencies[f]));y&&(u(l,[p.moduleId]),h[f]=c)}t=void 0;for(var v,_=[],b=0;b<l.length;b++){var I=l[b],M=r.c[I];M&&M.hot._selfAccepted&&h[I]!==c&&!M.hot._selfInvalidated&&_.push({module:I,require:M.hot._requireSelf,errorHandler:M.hot._selfAccepted})}return{dispose:function(){var e;n.forEach((function(e){delete i[e]})),n=void 0;for(var t,s=l.slice();s.length>0;){var a=s.pop(),o=r.c[a];if(o){var u={},h=o.hot._disposeHandlers;for(b=0;b<h.length;b++)h[b].call(null,u);for(r.hmrD[a]=u,o.hot.active=!1,delete r.c[a],delete d[a],b=0;b<o.children.length;b++){var c=r.c[o.children[b]];c&&(e=c.parents.indexOf(a))>=0&&c.parents.splice(e,1)}}}for(var f in d)if(r.o(d,f)&&(o=r.c[f]))for(v=d[f],b=0;b<v.length;b++)t=v[b],(e=o.children.indexOf(t))>=0&&o.children.splice(e,1)},apply:function(e){for(var t in h)r.o(h,t)&&(r.m[t]=h[t]);for(var n=0;n<s.length;n++)s[n](r);for(var i in d)if(r.o(d,i)){var o=r.c[i];if(o){v=d[i];for(var u=[],c=[],f=[],p=0;p<v.length;p++){var m=v[p],g=o.hot._acceptedDependencies[m],w=o.hot._acceptedErrorHandlers[m];if(g){if(-1!==u.indexOf(g))continue;u.push(g),c.push(w),f.push(m)}}for(var y=0;y<u.length;y++)try{u[y].call(null,v)}catch(t){if("function"==typeof c[y])try{c[y](t,{moduleId:i,dependencyId:f[y]})}catch(n){a.onErrored&&a.onErrored({type:"accept-error-handler-errored",moduleId:i,dependencyId:f[y],error:n,originalError:t}),a.ignoreErrored||(e(n),e(t))}else a.onErrored&&a.onErrored({type:"accept-errored",moduleId:i,dependencyId:f[y],error:t}),a.ignoreErrored||e(t)}}}for(var x=0;x<_.length;x++){var b=_[x],I=b.module;try{b.require(I)}catch(t){if("function"==typeof b.errorHandler)try{b.errorHandler(t,{moduleId:I,module:r.c[I]})}catch(n){a.onErrored&&a.onErrored({type:"self-accept-error-handler-errored",moduleId:I,error:n,originalError:t}),a.ignoreErrored||(e(n),e(t))}else a.onErrored&&a.onErrored({type:"self-accept-errored",moduleId:I,error:t}),a.ignoreErrored||e(t)}}return l}}}self.webpackHotUpdaterandom_race=(e,n,i)=>{for(var o in n)r.o(n,o)&&(t[o]=n[o]);i&&s.push(i),a[e]&&(a[e](),a[e]=void 0)},r.hmrI.jsonp=function(e,i){t||(t={},s=[],n=[],i.push(u)),r.o(t,e)||(t[e]=r.m[e])},r.hmrC.jsonp=function(a,d,l,h,c,f){c.push(u),e={},n=d,t=l.reduce((function(e,t){return e[t]=!1,e}),{}),s=[],a.forEach((function(t){r.o(i,t)&&void 0!==i[t]&&(h.push(o(t)),e[t]=!0)})),r.f&&(r.f.jsonpHmr=function(t,n){e&&!r.o(e,t)&&r.o(i,t)&&void 0!==i[t]&&(n.push(o(t)),e[t]=!0)})},r.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(r.p+r.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),r(8022)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,